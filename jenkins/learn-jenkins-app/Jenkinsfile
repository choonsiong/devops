pipeline {
    agent any

    environment {
        NETLIFY_SITE_ID = credentials('NETLIFY_LEARN_JENKINS_APP_SITE_ID')
        NETLIFY_AUTH_TOKEN = credentials('NETLIFY_TOKEN')
    }

    stages {
        // Line
        /*
        Line 1
        Line 2
        */
        stage('Build') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }

            steps {
                sh '''
                    echo "Building node app..."
                    node --version
                    npm --version
                    ls -la
                    npm ci
                    npm run build
                    ls -la
                '''
            }
        }

        stage('Run Tests') {
            parallel {
                stage('Unit Test') {
                    agent {
                        docker {
                            image 'node:18-alpine'
                            reuseNode true
                        }
                    }

                    steps {
                        sh '''
                            echo "Testing node app..."
                            test -f build/index.html && echo "File exists!"
                            echo "Run npm test..."
                            npm test
                        '''
                    }

                    post {
                        always {
                            junit 'jest-test-results/junit.xml'
                        }
                    }
                }

                stage('End to End Test') {
                    agent {
                        docker {
                            image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                            reuseNode true
                            //args '-u root:root'
                        }
                    }

                    steps {
                        sh '''
                            echo "Testing end-to-end node app..."
                            npm install serve
                            echo "Serving from build..."
                            node_modules/.bin/serve -s build &
                            echo "Wait for few seconds..."
                            sleep 10
                            echo "Starting playwright test..."
                            npx playwright test --reporter=html
                            sleep 10
                        '''
                    }

                    post {
                            always {
                                // Need to run below script under Script Console in order to see the HTML page
                                // System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "sandbox allow-scripts;")
                                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, icon: '', keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'Playwright Local HTML Report', reportTitles: '', useWrapperFileDirectly: true])
                            }
                        }
                }
            }
        }

        stage('Deploy Staging') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }

            steps {
                sh '''
                    echo "Deploying to staging"
                    npm install netlify-cli                    
                    node_modules/.bin/netlify --version
                    node_modules/.bin/netlify status
                    node_modules/.bin/netlify deploy --dir=build
                    echo "SITE ID: $NETLIFY_SITE_ID"
                '''
            }
        }

        stage('Approval') {
            steps {
                timeout(time: 1, unit: 'MINUTES') {
                    input message: 'Ready to deploy?', ok: 'Yes'
                }
            }
        }

        stage('Deploy Production') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }

            steps {
                sh '''
                    echo "Deploying to production"
                    npm install netlify-cli                    
                    node_modules/.bin/netlify --version
                    node_modules/.bin/netlify status
                    node_modules/.bin/netlify deploy --dir=build --prod
                    echo "SITE ID: $NETLIFY_SITE_ID"
                '''
            }
        }

        stage('Production End to End Test') {
            agent {
                docker {
                    image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                    reuseNode true
                }
            }

            environment {
                CI_ENVIRONMENT_URL = credentials('NETLIFY_LEARN_JENKINS_APP_CI_ENVIRONMENT_URL')
            }            

            steps {
                sh '''
                    echo "Starting playwright test..."
                    npx playwright test --reporter=html
                '''
            }

            post {
                    always {
                        // Need to run below script under Script Console in order to see the HTML page
                        // System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "sandbox allow-scripts;")
                        publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, icon: '', keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'Playwright Production HTML Report', reportTitles: '', useWrapperFileDirectly: true])
                    }
                }
            }
    }

//     post {
//         always {
//             junit 'jest-test-results/junit.xml'
//             // Need to run below script under Script Console in order to see the HTML page
//             // System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "sandbox allow-scripts;")
//             publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, icon: '', keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'Playwright HTML Report', reportTitles: '', useWrapperFileDirectly: true])
//         }
//     }
}
